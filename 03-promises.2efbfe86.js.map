{"mappings":"YAwBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAnCMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAMC,EAAaC,OAAOH,EAAEI,OAAOd,MAAMe,OACnCC,EAAYH,OAAOH,EAAEI,OAAOG,KAAKF,OACjCG,EAASL,OAAOH,EAAEI,OAAOI,OAAOH,OAE7BI,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnCrB,EAAcqB,EAFAP,EAAaI,GAAaG,EAAI,IAGzCC,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,QAAQC,IAAI,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE3DyB,OAAM,SAAAJ,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,QAAQC,IAAI,sBAAuCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = Number(e.target.delay.value);\n  const delayStep = Number(e.target.step.value);\n  const amount = Number(e.target.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firstDelay + delayStep * (i - 1);\n\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`‚úÖ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`‚ùå Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 500)\n//   .then(item => console.log(item))\n//   .catch(error => console.error(error));\n\n// ------------------------------------\n\n// const start = document.querySelector('.js-start');\n// const container = document.querySelector('.js-container');\n\n// start.addEventListener('click', onStart);\n\n// function onStart() {\n//   const result = [];\n//   [...container.children].forEach((box, i) => (box.textContent = ''));\n//   [...container.children].forEach((box, i) => {\n//     return createPromise(i)\n//       .then(smile => {\n//         box.textContent = smile;\n//         result.push('1');\n//       })\n//       .catch(smile => {\n//         box.textContent = smile;\n//       })\n//       .finally(() => {\n//         setTimeout(() => {\n//           if (i === container.children.length - 1) {\n//             if (!result.length || result.length === 3) {\n//               alert('Winner üçíüçíüçí');\n//             } else {\n//               alert('‚ùåLost money!!!!üò™üò™üò©');\n//             }\n//           }\n//         }, 500);\n//       });\n//   });\n// }\n\n// function createPromise(delay) {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const random = Math.random();\n//       if (random > 0.55) {\n//         resolve('üíµ');\n//       } else {\n//         reject('‚ùå');\n//       }\n//     }, 1000 * delay + 500);\n//   });\n// }\n\n// ----------------------------------------------------------------\n\n// const start = document.querySelector('.js-start');\n// const container = document.querySelector('.js-container');\n\n// start.addEventListener('click', onStart);\n\n// function onStart() {\n//   let counter = 0;\n\n//   [...container.children].forEach((box, i) => (box.textContent = ''));\n//   const promises = [...container.children].map((_, i) => createPromise(i));\n\n//   Promise.allSettled(promises).then(items => {\n//     items.forEach((item, i) => {\n//       setTimeout(() => {\n//         if (item.status === 'fulfilled') {\n//           counter += 1;\n//         }\n//         container.children[i].textContent = item.value || item.reason;\n\n//         if (i === container.children.length - 1) {\n//           setTimeout(() => {\n//             if (counter === container.children.length || !counter) {\n//               alert('Winner üçíüçíüçí');\n//             } else {\n//               alert('‚ùåLost money!!!!üò™üò™üò©');\n//             }\n//           }, 500);\n//         }\n//       }, i * 1000);\n//     });\n//   });\n// }\n\n// function createPromise() {\n//   return new Promise((resolve, reject) => {\n//     const random = Math.random();\n//     if (random > 0.55) {\n//       resolve('üíµ');\n//     } else {\n//       reject('‚ùå');\n//     }\n//   });\n// }\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","firstDelay","Number","target","value","delayStep","step","amount","i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.2efbfe86.js.map"}